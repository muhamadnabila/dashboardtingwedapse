{"version":3,"sources":["Views/AddProduct/CategoryOption.js","Components/navigationProductManagement.js","Helpers/getIndoTime.js","Views/AddProduct/index.js","Helpers/convertRupiah.js","Components/Search.js","Views/ProductManagement/index.js","Views/UpdateStock/index.js","Views/SellManagement/index.js","Views/OutCome/index.js","Views/Used/index.js","Components/navigationData.js","Views/Data/transactionDaily.js","Views/Data/outCome.js","Views/Data/used.js","Views/Data/asset.js","Views/Data/index.js","Components/Header/index.js","App.js","reportWebVitals.js","index.js"],"names":["categoryOptions","label","value","NavigationProductManagement","isPageActive","setIsPageActive","history","useHistory","useRouteMatch","handleClickChangePage","page","push","path","url","onClick","className","getIndoTime","date","Moment","tz","Date","moment","format","AddProduct","useState","name","setName","category","setCategory","amount","setAmount","modalPrice","setModalPrice","sellPriceRetail","setSellPriceRetail","sellPriceGrocery","setSellPriceGrocery","loading","setLoading","useEffect","autoFocus","onChange","e","target","options","type","placeholder","axios","post","created_at","then","data","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","catch","err","error","convertRupiah","number","Intl","NumberFormat","style","currency","Search","dataList","setDataList","isTransaction","isOutCome","inputSearch","setInputSearch","length","map","isShow","productId","toLowerCase","includes","source","padding","borderRadius","outline","border","Product","product","indexProduct","productList","setProductList","isEditProduct","setIsEditProduct","dataProduct","setDataProduct","totalSold","totalUsed","put","_id","ProductManagement","key","sort","setSort","handleSort","a","b","get","Fragment","min","updated_at","newProductList","success","UpdateStock","fontSize","customPrice","setCustomPrice","isSoldFrom","price","SellManagement","setDate","showDatePicker","setShowDatePicker","display","marginLeft","selected","inline","OutCome","setSource","description","setDescription","useLayoutEffect","productName","Used","NavigationData","startDate","setStartDate","endDate","setEndDate","setTriggerGetData","triggerGetData","pageActive","setPageActive","dates","start","end","selectsRange","transactionList","setTransactionList","transaction","indexTransaction","getTransaction","delete","TransactionDaily","totalBruto","setTotalBruto","totalProfit","setTotalProfit","totalTransactionJambu","setTotalTransactionJambu","totalOutCome","setTotalOutCome","outCome","totalUsedIDR","setTotalUsedIDR","totalUsedCount","setTotalUsedCount","Asset","totalAssetProductToIDR","setTotalAssetProductToIDR","cashAsset","setCashAsset","cashAssetUsed","setCashAssetUsed","cashAssetData","setCashAssetData","inputEditAsset","setInputEditAsset","getCashAsset","handleEditAsset","totalAssetProductUsedToIDR","Number","backgroundColor","Data","exact","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","baseURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef761b58.chunk.js","sourcesContent":["const categoryOptions = [\n    {\n    label: 'Tembakau Daerah',\n    value: 'Tembakau Daerah'\n    },{\n    label: 'Tembakau Pabrikan 20k',\n    value: 'Tembakau Pabrikan 20k'\n    },{\n    label: 'Tembakau Pabrikan 10k',\n    value: 'Tembakau Pabrikan 10k'\n    },{\n    label: 'Tembakau Pabrikan 5k',\n    value: 'Tembakau Pabrikan 5k'\n    },{\n    label: 'Tembakau Aromatik',\n    value: 'Tembakau Aromatik'\n    },{\n    label: 'Tembakau Simadu',\n    value: 'Tembakau Simadu'\n    },{\n    label: 'Tembakau Mole',\n    value: 'Tembakau Mole'\n    },{\n    label: 'Tembakau Tarumartani',\n    value: 'Tembakau Tarumartani'\n    },{\n    label: 'Tembakau Durensimadu',\n    value: 'Tembakau Durensimadu'\n    },{\n    label: 'Tembakau RubbyBaco',\n    value: 'Tembakau RubbyBaco'\n    },{\n    label: 'Tembakau JagoRasa',\n    value: 'Tembakau JagoRasa'\n    },{\n    label: 'Tembakau DissBacco',\n    value: 'Tembakau DissBacco'\n    },{\n    label: 'Tembakau Nolabel',\n    value: 'Tembakau Nolabel'\n    },{\n    label: 'Peralatan Linting',\n    value: 'Peralatan Linting'\n    },{\n    label: 'Kertas',\n    value: 'Kertas'\n    },{\n    label: 'Cengkeh',\n    value: 'Cengkeh'\n    },{\n    label: 'Busa 5k',\n    value: 'Busa 5k'\n    },{\n    label: 'Busa 2k',\n    value: 'Busa 2k'\n    },{\n    label: 'Cigars',\n    value: 'Cigars'\n    },{\n    label: 'Aksesoris',\n    value: 'Aksesoris'\n    },\n]\n\nexport default categoryOptions;","import {useEffect} from 'react'\nimport {\n    useHistory,\n    useRouteMatch\n} from \"react-router-dom\";\n\nfunction NavigationProductManagement({isPageActive, setIsPageActive}) {\n    \n    const history = useHistory()\n    let {path, url} = useRouteMatch()\n\n    function handleClickChangePage(page) {\n        setIsPageActive(page)\n        history.push(page)\n    }\n\n    return(\n        <>\n            <div>\n                <button onClick={() => handleClickChangePage(\"/\")} className={`${isPageActive === '/' && 'button-nav-active'} add-product`}>⚙️ Kelola Produk</button>\n                <button onClick={() => handleClickChangePage(\"addProduct\")} className={`${isPageActive === `addProduct` && 'button-nav-active'} add-product`}>🤖 Tambah Produk</button>\n                <button onClick={() => handleClickChangePage(\"updateStock\")} className={`${isPageActive === `updateStock` && 'button-nav-active'} add-product`}>✍️ Update Stock</button>\n                <button onClick={() => handleClickChangePage(\"penjualan\")} className={`${isPageActive === `penjualan` && 'button-nav-active'} add-product`}>💰 Input Penjualan</button>\n                <button onClick={() => handleClickChangePage(\"used\")} className={`${isPageActive === `used` && 'button-nav-active'} add-product`}>👌 Pemakaian/Bonus</button>\n            </div> \n            <br/>\n        </>\n    )\n}\n\nexport default NavigationProductManagement;","import Moment from 'moment-timezone'\nimport moment from 'moment'\nfunction getIndoTime(date) {\n    let getIndoDate = Moment.tz(new Date(moment(date).format()), 'Asia/Jakarta')\n    let indoTime = getIndoDate.format()\n    return indoTime;\n}\nexport default getIndoTime;","import {useState, useEffect} from 'react'\nimport Select from 'react-select'\nimport categoryOptions from './CategoryOption'\nimport axios from 'axios'\nimport { toast } from 'react-toastify';\nimport NavigationProductManagement from '../../Components/navigationProductManagement'\nimport getIndoTime from '../../Helpers/getIndoTime'\n\nfunction AddProduct({setIsPageActive}){\n    \n    const [name, setName] = useState('')\n    const [category, setCategory] = useState('')\n    const [amount, setAmount] = useState(0)\n    const [modalPrice, setModalPrice] = useState(0)\n    const [sellPriceRetail, setSellPriceRetail] = useState(0)\n    const [sellPriceGrocery, setSellPriceGrocery] = useState(0)\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        setIsPageActive('addProduct')\n    },[])\n\n    function handleSubmit() {\n        if(loading) return;\n        setLoading(true)\n        axios.post('/product', {\n            name,\n            category,\n            amount,\n            modalPrice,\n            sellPriceRetail,\n            sellPriceGrocery,\n            created_at: getIndoTime(new Date())\n        })\n        .then(data => {\n            setLoading(false)\n            toast(`🦄 Tambah Produk ${name}: ${amount}`, {\n                position: \"bottom-right\",\n                autoClose: false,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n            setName('')\n            setCategory('')\n            setAmount(0)\n            setModalPrice(0)\n            setSellPriceRetail(0)\n            setSellPriceGrocery(0)\n        })\n        .catch(err => {\n            setLoading(false)\n            toast.error('🐔 error pak eko')\n        })\n    }\n    \n    return(\n        <div className=\"section-add-product\">\n            {/* <NavigationProductManagement/> */}\n            <div className=\"wrapper-add-product\">\n                <h3 className=\"page-title\">TAMBAH PRODUK</h3>\n                <div className=\"wrapper-label\">\n                <label>Nama Produk</label>\n                <input \n                    autoFocus\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    />\n                </div>\n                <div className=\"wrapper-label\">\n                <label>Kategori</label>\n                <Select\n                    value={{label: category, value: category}}\n                    options={categoryOptions}\n                    onChange={(value) => setCategory(value.value)}\n                />\n                </div>\n                <div className=\"wrapper-label\">\n                <label>Jumlah Produk (pcs)</label>\n                <input\n                    type=\"number\"\n                    value={amount == 0 ? '' : amount }\n                    onChange={(e) => setAmount(e.target.value)}\n                    />\n                </div>\n                <div className=\"wrapper-label\">\n                <label>Harga Modal Produk (per pcs) </label>\n                <input\n                    type=\"number\"\n                    value={modalPrice == 0 ? '' : modalPrice }\n                    placeholder=\"Rp\"\n                    onChange={(e) => setModalPrice(e.target.value)}\n                    />\n                </div>\n                <div className=\"wrapper-label\">\n                <label>Harga Jual Produk Retail (per pcs)</label>\n                <input\n                    type=\"number\"\n                    value={sellPriceRetail == 0 ? '' : sellPriceRetail }\n                    placeholder=\"Rp\"\n                    onChange={(e) => setSellPriceRetail(e.target.value)}\n                    />\n                </div>\n                 {/* <div className=\"wrapper-label\">\n                <label>Harga Jual Produk Cabang (per pcs)</label>\n                <input\n                    value={sellPriceGrocery == 0 ? '' : sellPriceGrocery }\n                    type=\"number\"\n                    onChange={(e) => setSellPriceGrocery(e.target.value)}\n                    placeholder=\"Rp\"\n                    />\n                </div> */}\n                <button onClick={handleSubmit}>SUBMIT</button>\n            </div>\n      </div>\n    )\n}\n\nexport default AddProduct;","function convertRupiah(number) {\n    return new Intl.NumberFormat(\"id-ID\", {\n        style: \"currency\",\n        currency: \"IDR\"\n      }).format(number);\n}\nexport default convertRupiah;","import { useState } from 'react'\n\nfunction Search({dataList, setDataList, isTransaction, isOutCome = false}) {\n    \n    const [inputSearch, setInputSearch] = useState('')\n\n    function handleSearch(e) {\n        setInputSearch(e.target.value)\n        if(e.target.value.length === 0) {\n            setDataList(dataList.map(data => {\n                return {...data, isShow: true }\n            }))\n        }else {\n            setDataList(dataList.map(data => {\n                if(isTransaction){\n                    if(data.productId.name.toLowerCase().includes(e.target.value.toLowerCase())){\n                        return {...data, isShow: true }\n                    }\n                }else if(isOutCome){\n                    if(data.source.toLowerCase().includes(e.target.value.toLowerCase())){\n                        return {...data, isShow: true }\n                    }\n                }else {\n                    if(data.name.toLowerCase().includes(e.target.value.toLowerCase())){\n                        return {...data, isShow: true }\n                    }\n                }\n                return {...data, isShow: false }\n            }))\n        }\n    }\n    \n    return (\n        <input \n            onChange={handleSearch}\n            value={inputSearch}\n            placeholder=\"🧲 search\"\n            style={{padding: '3px 5px', borderRadius: '3px', outline:'none', border: 'none'}}\n        />\n    )\n}\n\nexport default Search","import React, { useEffect, useState } from 'react'\nimport {\n    useHistory,\n} from \"react-router-dom\";\nimport axios from 'axios'\nimport {toast} from 'react-toastify'\nimport convertRupiah from '../../Helpers/convertRupiah'\nimport NavigationProductManagement from '../../Components/navigationProductManagement'\nimport Search from '../../Components/Search'\n\nfunction ProductManagement({setIsPageActive}) {\n    \n    const [productList, setProductList] = useState([])\n    const [sort, setSort] = useState({key: 'name', value: 'asc'})\n\n    useEffect(() =>{\n        setIsPageActive('/')\n        axios.get('/product')\n        .then(({data}) => {\n            setProductList(data)\n        })\n        .catch(err => {\n            toast.error('🐔 error pak eko')\n        })\n    },[])\n\n    function handleSort(key) {\n        if(sort.value === 'asc'){\n            setProductList(productList.sort((a,b) => {\n                return (a[key] < b[key] ? 1 : ((b[key] < a[key]) ? -1 : 0))\n            }))\n            setSort({key, value: 'desc'})\n        }else {\n            setProductList(productList.sort((a,b) => {\n                return (a[key] > b[key] ? 1 : ((b[key] > a[key]) ? -1 : 0))\n            }))\n            setSort({key, value: 'asc'})\n        }\n    }\n\n\n    return(\n        <div className=\"section-list-product\">\n            <h3 className=\"page-title\">KELOLA PRODUK</h3>\n            <Search dataList={productList} setDataList={setProductList}/>\n            <br/>\n            <br/>\n            <div className=\"table-list-product\">\n                <div className=\"table-list-product-thead\">\n                    <div className=\"flex1 table-list-product-td\">Nama Produk <i onClick={()=> handleSort('name')}>↕️</i></div>\n                    <div className=\"flex1 table-list-product-td\">Kategori <i onClick={()=> handleSort('category')}>↕️</i></div>\n                    <div className=\"flex1 table-list-product-td\">Sisa Stok <i onClick={()=> handleSort('amount')}>↕️</i></div>\n                    <div className=\"flex1 table-list-product-td\">Terjual <i onClick={()=> handleSort('totalSold')}>↕️</i></div>\n                    <div className=\"flex1 table-list-product-td\">Terpakai/Bonus <i onClick={()=> handleSort('totalUsed')}>↕️</i></div>\n                    <div className=\"flex1 table-list-product-td\">Harga Modal (pcs) </div>\n                    <div className=\"flex1 table-list-product-td\">Harga Retail (pcs) </div>\n                    {/* <div className=\"flex1 table-list-product-td\">Harga Cabang (pcs) </div> */}\n                    <div className=\"flex1 table-list-product-td\">Action</div>\n                </div>\n                <div className=\"table-list-product-tbody\">\n                    {\n                        productList.map((product, indexProduct) => {\n                            return (\n                                <React.Fragment key={product._id}>\n                                {\n                                    product.isShow && <Product product={product} indexProduct={indexProduct} productList={productList} setProductList={setProductList}/>\n                                }\n                                </ React.Fragment>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction Product({product, indexProduct, productList, setProductList}) {\n\n    const [isEditProduct, setIsEditProduct] = useState(false)\n    const [dataProduct, setDataProduct] = useState(product)\n\n    function handleSubmitEditProduct() {\n        axios.put(`/product/${dataProduct._id}`, dataProduct)\n        .then(data => {\n            setProductList(productList.map(product => {\n                if(product._id === dataProduct._id){\n                    return dataProduct\n                }else {\n                    return product\n                }\n            }))\n            setIsEditProduct(false)\n            toast(`🦄 Edit Produk: ${dataProduct.name}`, {\n                position: \"bottom-right\",\n                autoClose: true,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        })\n        .catch(err => {\n            toast.error('🐔 error pak eko')\n        })\n    }\n\n    function handleCancelEditProduct() {\n        setIsEditProduct(false)\n        setDataProduct(product)\n    }\n    \n    return (\n        <div className={`table-list-product-tr ${indexProduct % 2 === 0 ? 'table-list-product-tr__white' : 'table-list-product-tr__black' }`}>\n            {\n                isEditProduct ?\n                    <>\n                        <div className=\"flex1 table-list-product-td\">\n                            <input\n                                placeholder={dataProduct.name}\n                                value={dataProduct.name}\n                                onChange={(e) => setDataProduct({...dataProduct, name: e.target.value})}\n                            />\n                        </div>\n                        <div className=\"flex1 table-list-product-td\">\n                            <input\n                                placeholder={dataProduct.category}\n                                value={dataProduct.category}\n                                onChange={(e) => setDataProduct({...dataProduct, category: e.target.value})}\n                            />\n                        </div>\n                        <div className=\"flex1 table-list-product-td\">\n                            <input\n                                placeholder={dataProduct.amount}\n                                value={dataProduct.amount}\n                                onChange={(e) => setDataProduct({...dataProduct, amount: e.target.value})}\n                            />\n                        </div>\n                        <div className=\"flex1 table-list-product-td\">\n                            <input\n                                placeholder={dataProduct.totalSold}\n                                value={dataProduct.totalSold}\n                                onChange={(e) => setDataProduct({...dataProduct, totalSold: e.target.value})}\n                            />\n                        </div>\n                        <div className=\"flex1 table-list-product-td\">\n                            <input\n                                placeholder={dataProduct.totalUsed}\n                                value={dataProduct.totalUsed}\n                                onChange={(e) => setDataProduct({...dataProduct, totalUsed: e.target.value})}\n                            />\n                        </div>\n                        <div className=\"flex1 table-list-product-td\">\n                            <input\n                                placeholder={dataProduct.modalPrice}\n                                value={dataProduct.modalPrice}\n                                onChange={(e) => setDataProduct({...dataProduct, modalPrice: e.target.value})}\n                            />\n                        </div>\n                        <div className=\"flex1 table-list-product-td\">\n                            <input\n                                placeholder={dataProduct.sellPriceRetail}\n                                value={dataProduct.sellPriceRetail}\n                                onChange={(e) => setDataProduct({...dataProduct, sellPriceRetail: e.target.value})}\n                            />\n                        </div>\n                        {/* <div className=\"flex1 table-list-product-td\">\n                            <input\n                                placeholder={dataProduct.sellPriceGrocery}\n                                value={dataProduct.sellPriceGrocery}\n                                onChange={(e) => setDataProduct({...dataProduct, sellPriceGrocery: e.target.value})}\n                            />\n                        </div> */}\n                        <div className=\"flex1 table-list-product-td\">\n                            <button className=\"btn-edit-product\" onClick={handleSubmitEditProduct}>Submit</button>\n                            <button className=\"btn-delete-product\" onClick={handleCancelEditProduct}>x</button>\n                        </div>\n                    </> \n                :\n                <>\n                    <div className=\"flex1 table-list-product-td\">{dataProduct.name}</div>\n                    <div className=\"flex1 table-list-product-td\">{dataProduct.category}</div>\n                    <div className=\"flex1 table-list-product-td\">{dataProduct.amount}</div>\n                    <div className=\"flex1 table-list-product-td\">{dataProduct.totalSold}</div>\n                    <div className=\"flex1 table-list-product-td\">{dataProduct.totalUsed}</div>\n                    <div className=\"flex1 table-list-product-td\">{convertRupiah(dataProduct.modalPrice)}</div>\n                    <div className=\"flex1 table-list-product-td\">{convertRupiah(dataProduct.sellPriceRetail)}</div>\n                    {/* <div className=\"flex1 table-list-product-td\">{convertRupiah(dataProduct.sellPriceGrocery)}</div> */}\n                    <div className=\"flex1 table-list-product-td\">\n                        <button className=\"btn-edit-product\" onClick={() => setIsEditProduct(true)}>Edit</button>\n                    </div>\n                </>\n            }\n        </div>\n    )\n\n}\nexport default ProductManagement;","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport {toast} from 'react-toastify'\nimport NavigationProductManagement from '../../Components/navigationProductManagement'\nimport getIndoTime from '../../Helpers/getIndoTime'\nimport Search from '../../Components/Search'\n\nfunction UpdateStock({setIsPageActive}) {\n    \n    const [productList, setProductList] = useState([])\n    \n\n    useEffect(() =>{\n        axios.get('/product')\n        .then(({data}) => {\n            setProductList(data)\n        })\n        .catch(err => {\n            toast.error('🐔 error pak eko')\n        })\n        setIsPageActive('updateStock')\n    },[])\n\n    \n    return(\n        <div className=\"section-list-product\">\n            <h3 className=\"page-title\">UPDATE STOK</h3>\n            <Search dataList={productList} setDataList={setProductList}/>\n            <br/>\n            <br/>\n            <div className=\"table-list-product\">\n                <div className=\"table-list-product-thead\">\n                    <div className=\"flex1 table-list-product-td\">Nama Produk</div>\n                    <div className=\"flex1 table-list-product-td\">Kategori</div>\n                    <div className=\"flex1 table-list-product-td\">Jumlah Stok</div>\n                    <div className=\"flex1 table-list-product-td\">Harga Normal</div>\n                    <div className=\"flex1 table-list-product-td\">Harga Baru <span style={{fontSize: '12px'}}>(apabia beda)</span></div>\n                    <div className=\"flex1 table-list-product-td\">Update Stok</div>\n                </div>\n                <div className=\"table-list-product-tbody\">\n                    {\n                        productList.map((product, indexProduct) => {\n                            return (\n                                <React.Fragment key={product._id}>\n                                    {\n                                        product.isShow &&  <Product productList={productList} setProductList={setProductList} product={product} indexProduct={indexProduct}/>\n                                    }\n                                </React.Fragment>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction Product({productList, setProductList, product, indexProduct}) {\n\n    const [amount, setAmount] = useState(0)\n    const [modalPrice, setModalPrice] = useState(0)\n    const [loading, setLoading] = useState(false)\n\n    function handleSubmit(dataProduct){\n        if(loading) return;\n        setLoading(true)\n        axios.put(`/product/stock/${dataProduct._id}`, {\n            amount,\n            modalPrice,\n            updated_at: getIndoTime(new Date())\n        })\n        .then(({data}) => {\n            setLoading(false)\n            let newProductList = [...productList]\n            newProductList.map(product => {\n                if(product._id === dataProduct._id){\n                    product.amount = data.amount\n                    product.modalPrice = data.modalPrice\n                }\n            })\n            setAmount(0)\n            setModalPrice(0)\n            setProductList(newProductList)\n            toast(`🦄 Update Stock ${dataProduct.name}: ${amount}`, {\n                position: \"top-center\",\n                autoClose: false,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n            toast.success('🦉 masok pak eko')\n        })\n        .catch(err => {\n            setLoading(false)\n            toast.error('🐔 error pak eko')\n        })\n    }\n\n    return(\n        <div className={`table-list-product-tr ${indexProduct % 2 === 0 ? 'table-list-product-tr__white' : 'table-list-product-tr__black' }`}>\n            <div className=\"flex1 table-list-product-td\">{product.name}</div>\n            <div className=\"flex1 table-list-product-td\">{product.category}</div>\n            <div className=\"flex1 table-list-product-td\">{product.amount}</div>\n            <div className=\"flex1 table-list-product-td\">{product.modalPrice}</div>\n            <div className=\"flex1 table-list-product-td\">\n                <input \n                    onChange={(e) =>setModalPrice(e.target.value)}\n                    placeholder=\"0\"\n                    type=\"number\"\n                    className=\"input-currency\"\n                    min={0}\n                    value={modalPrice == 0 ? '' : modalPrice}\n                />\n            </div>\n            <div className=\"flex1 table-list-product-td\">\n                <input \n                    onChange={(e) =>setAmount(e.target.value)}\n                    min={0}\n                    placeholder=\"0\"\n                    type=\"number\"\n                    className=\"input-number\"\n                    value={amount == 0 ? '' : amount}\n                />\n                <button className=\"btn-submit-update-stok\" onClick={() => handleSubmit(product)}>Submit</button>\n            </div>\n        </div>\n    )\n}\n\nexport default UpdateStock;","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport {toast} from 'react-toastify'\nimport NavigationProductManagement from '../../Components/navigationProductManagement'\nimport getIndoTime from '../../Helpers/getIndoTime'\nimport Search from '../../Components/Search'\nimport DatePicker from 'react-datepicker'\nimport moment from 'moment'\n\nfunction SellManagement({setIsPageActive}) {\n\n    const [productList, setProductList] = useState([])\n    const [date, setDate] = useState(new Date())\n    const [showDatePicker, setShowDatePicker] = useState(false)\n\n    useEffect(() =>{\n        getData()\n        setIsPageActive('penjualan')\n    },[])\n    \n    function getData() {\n        axios.get('/product')\n        .then(({data}) => {\n            setProductList(data)\n        })\n        .catch(err => {\n            toast.error('🐔 error pak eko')\n        })\n    }\n\n    function handleChangeDate(date) {\n        setDate(date)\n        setShowDatePicker(false)\n    }\n\n\n    return(\n        <div className=\"section-list-product\">\n            <h3 className=\"page-title\">PENJUALAN HARIAN</h3>\n            <div>\n                <Search dataList={productList} setDataList={setProductList}/>\n                <div style={{display: 'inline-block', marginLeft: '10px'}}>\n                    <div className=\"button--date\" onClick={() => setShowDatePicker(!showDatePicker)}>\n                        {`${moment(date).format('L')}`}\n                    </div>\n                    {\n                        showDatePicker && (\n                            <div style={{position: 'absolute'}}>\n                                <DatePicker\n                                    onChange={handleChangeDate}\n                                    selected={date}\n                                    inline\n                                />\n                            </div>\n                        )\n                    }\n                </div>\n            </div>\n            <br/>\n            <br/>\n            <div className=\"table-list-product\">\n                <div className=\"table-list-product-thead\">\n                    <div className=\"flex1 table-list-product-td\">Nama Produk</div>\n                    <div className=\"flex1 table-list-product-td\">Kategori</div>\n                    <div className=\"flex1 table-list-product-td\">Jumlah Stok</div>\n                    <div className=\"flex1 table-list-product-td\">Harga Jual Retail</div>\n                    <div className=\"flex1 table-list-product-td\">Harga per Satuan <span style={{fontSize: '12px'}}>(jika beda/ada yang nawar)</span></div>\n                    <div className=\"flex1 table-list-product-td\">Penjualan</div>\n                </div>\n                <div className=\"table-list-product-tbody\">\n                    {\n                        productList.map((product, indexProduct) => {\n                            return(\n                                <React.Fragment key={product._id}>\n                                    {\n                                        product.isShow && <Product date={date} key={product._id} product={product} indexProduct={indexProduct} productList={productList} setProductList={setProductList}/>\n                                    }\n                                </React.Fragment>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction Product({product, indexProduct, productList, setProductList, date}) {\n\n    const [amount, setAmount] = useState(0)\n    const [customPrice, setCustomPrice] = useState(0)\n    const [loading, setLoading] = useState(false)\n    \n    function handleSubmit(dataProduct, isSoldFrom){\n        if(loading) return;\n        setLoading(true)\n        axios.post(`/transaction`, {\n            amount,\n            productId: dataProduct._id,\n            isSoldFrom : customPrice == 0 ? isSoldFrom : 'custom retail',\n            customPrice,\n            created_at: getIndoTime(date)\n        })\n        .then(({data}) => {\n            setProductList(productList.map(product => {\n                if(product._id === dataProduct._id){\n                    return {\n                        ...product,\n                        amount: product.amount - amount\n                    }\n                }\n                return product\n            }))\n            setLoading(false)\n            toast(`🦄 Jual ${product.name}: ${amount} Total Rp. ${data.price * data.amount}`, {\n                position: \"bottom-right\",\n                autoClose: false,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n            setAmount(0)\n            setCustomPrice(0)\n        })\n        .catch(err => {\n            setLoading(false)\n            toast.error('🐔 error pak eko')\n        })\n    }\n\n    function handleChangeAmount(e) {\n        setAmount(e.target.value)\n        if(product.name === 'Kertas Manis'){\n            if(e.target.value == 0){\n                setCustomPrice(0)\n                return\n            }\n            if(e.target.value == 10 || e.target.value % 10 == 0){\n                setCustomPrice(7000/10)\n            }else if(e.target.value == 1){\n                setCustomPrice(1000)\n            }else if(e.target.value == 2){\n                setCustomPrice(1500 / 2)\n            }else if(e.target.value % 3 == 0){\n                setCustomPrice(0)\n            }else if(e.target.value % 2 == 0){\n                setCustomPrice(1500/2)\n            }else if(e.target.value == 5){\n                setCustomPrice(700)\n            }else if(e.target.value == 7){\n                setCustomPrice(714)\n            }else if(e.target.value == 8){\n                setCustomPrice(687)\n            }else {\n                setCustomPrice(0)\n            }\n        }else if(product.name == 'Jumbo Coklat'){\n            if(e.target.value == 10){\n                setCustomPrice(10000)\n            }else {\n                setCustomPrice(0)\n            }\n        }\n    }\n\n    return (\n        <div className={`table-list-product-tr ${indexProduct % 2 === 0 ? 'table-list-product-tr__white' : 'table-list-product-tr__black' }`}>\n            <div className=\"flex1 table-list-product-td\">{product.name}</div>\n            <div className=\"flex1 table-list-product-td\">{product.category}</div>\n            <div className=\"flex1 table-list-product-td\">{product.amount}</div>\n            <div className=\"flex1 table-list-product-td\">{product.sellPriceRetail}</div>\n            <div className=\"flex1 table-list-product-td\">\n                <input \n                    onChange={(e) => setCustomPrice(e.target.value)}\n                    placeholder=\"0\"\n                    type=\"number\"\n                    className=\"input-currency\"\n                    value={customPrice == 0? '' : customPrice}\n                    min={0}\n                />\n            </div>\n            <div className=\"flex1 table-list-product-td\">\n                <input \n                    onChange={handleChangeAmount}\n                    value={amount == 0 ? '' : amount}\n                    placeholder=\"0\"\n                    type=\"number\"\n                    className=\"input-number\"\n                    min={0}\n                />\n                <button className=\"btn-submit-update-stok\" onClick={() => handleSubmit(product, 'retail')}>Retail</button>\n                {/* <button className={`btn-submit-update-stok ${customPrice != 0 && 'btn-disabled'}`} onClick={() => handleSubmit(product, 'grocery', amount, customPrice)} disabled={customPrice != 0}>Cabang</button> */}\n            </div>\n        </div>\n    )\n}\n\nexport default SellManagement;","import {useState, useEffect, useLayoutEffect} from 'react'\nimport Select from 'react-select'\nimport axios from 'axios'\nimport { toast } from 'react-toastify';\nimport getIndoTime from '../../Helpers/getIndoTime'\n\nfunction OutCome({setIsPageActive}){\n    \n    const [source, setSource] = useState('')\n    const [amount, setAmount] = useState(0)\n    const [description, setDescription] = useState('')\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        setIsPageActive(false)\n    },[])\n\n    useLayoutEffect(() => {\n        return () => {\n            setIsPageActive(true)\n        } \n    },[])\n\n    function handleSubmit() {\n        if(loading) return;\n        setLoading(true)\n        axios.post('/outCome', {\n            source,\n            amount,\n            description,\n            created_at: getIndoTime(new Date())\n        })\n        .then(data => {\n            setLoading(false)\n            toast.success('🦉 masok pak eko')\n            setSource('')\n            setAmount(0)\n            setDescription('')\n        })\n        .catch(err => {\n            setLoading(false)\n            toast.error('🐔 error pak eko')\n        })\n    }\n    \n    return(\n        <div className=\"section-out-come\">\n            <h3 className=\"page-title\">PENGELUARAN HARIAN</h3>\n            <div className=\"wrapper-add-product\">\n                <div className=\"wrapper-label\">\n                    <label>Sumber Pengeluaran</label>\n                    <input \n                        autoFocus\n                        onChange={(e) => setSource(e.target.value)}\n                        value={source}\n                        />\n                </div>\n                <div className=\"wrapper-label\">\n                    <label>Jumlah Pengeluaran (Rupiah)</label>\n                    <input\n                        type=\"number\"\n                        onChange={(e) => setAmount(e.target.value)}\n                        value={amount}\n                        />\n                </div>\n                <div className=\"wrapper-label\">\n                    <label>Keterangan (opsional)</label>\n                    <input\n                        onChange={(e) => setDescription(e.target.value)}\n                        value={description}\n                        />\n                </div>\n                <button onClick={handleSubmit}>SUBMIT</button>\n            </div>\n      </div>\n    )\n}\n\nexport default OutCome;","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport {toast} from 'react-toastify'\nimport NavigationProductManagement from '../../Components/navigationProductManagement'\nimport getIndoTime from '../../Helpers/getIndoTime'\nimport Search from '../../Components/Search'\nimport DatePicker from 'react-datepicker'\nimport moment from 'moment'\n\nfunction Used({setIsPageActive}) {\n\n    const [productList, setProductList] = useState([])\n    const [date, setDate] = useState(new Date())\n    const [showDatePicker, setShowDatePicker] = useState(false)\n\n    useEffect(() =>{\n        getData()\n        setIsPageActive('used')\n    },[])\n\n    function getData() {\n        axios.get('/product')\n        .then(({data}) => {\n            setProductList(data)\n        })\n        .catch(err => {\n            toast.error('🐔 error pak eko')\n        })\n    }\n\n    function handleChangeDate(date) {\n        setDate(date)\n        setShowDatePicker(false)\n    }\n\n    \n\n    return(\n        <div className=\"section-list-product\">\n            <h3 className=\"page-title\">PEMAKAIAN PRIBADI/BONUS HARIAN</h3>\n            <div>\n                <Search dataList={productList} setDataList={setProductList}/>\n                <div style={{display: 'inline-block', marginLeft: '10px'}}>\n                    <div className=\"button--date\" onClick={() => setShowDatePicker(!showDatePicker)}>\n                        {`${moment(date).format('L')}`}\n                    </div>\n                    {\n                        showDatePicker && (\n                            <div style={{position: 'absolute'}}>\n                                <DatePicker\n                                    onChange={handleChangeDate}\n                                    selected={date}\n                                    inline\n                                />\n                            </div>\n                        )\n                    }\n                </div>\n            </div>\n            <br/>\n            <br/>\n            <div className=\"table-list-product\">\n                <div className=\"table-list-product-thead\">\n                    <div className=\"flex1 table-list-product-td\">Nama Produk</div>\n                    <div className=\"flex1 table-list-product-td\">Kategori</div>\n                    <div className=\"flex1 table-list-product-td\">Jumlah Stok</div>\n                    <div className=\"flex1 table-list-product-td\">Jumlah</div>\n                    <div className=\"flex1 table-list-product-td\">Action</div>\n                </div>\n                <div className=\"table-list-product-tbody\">\n                    {\n                        productList.map((product, indexProduct) => {\n                            return(\n                                <React.Fragment key={product._id}>\n                                    {\n                                        product.isShow && <Product date={date} product={product} indexProduct={indexProduct} productList={productList} setProductList={setProductList}/>\n                                    }\n                                </React.Fragment>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction Product({product, indexProduct, setProductList, productList, date}) {\n\n    const [amount, setAmount] = useState(0)\n    const [loading, setLoading] = useState(false)\n    \n    function handleSubmit(dataProduct){\n        if(loading) return;\n        setLoading(true)\n        axios.post(`/used`, {\n            amount,\n            productId: dataProduct._id,\n            productName: dataProduct.name,\n            sellPriceRetail: dataProduct.sellPriceRetail,\n            modalPrice: dataProduct.modalPrice,\n            created_at: getIndoTime(date)\n        })\n        .then(({data}) => {\n            setLoading(false)\n            toast.success('🦉 masok pak eko')\n            let newProductList = [...productList]\n            newProductList.map(product => {\n                if(product._id === dataProduct._id){\n                    product.amount -= data.amount\n                }\n            })\n            setAmount(0)\n            setProductList(newProductList)\n        })\n        .catch(err => {\n            setLoading(false)\n            toast.error('🐔 error pak eko')\n        })\n    }\n\n    return (\n        <div className={`table-list-product-tr ${indexProduct % 2 === 0 ? 'table-list-product-tr__white' : 'table-list-product-tr__black' }`}>\n            <div className=\"flex1 table-list-product-td\">{product.name}</div>\n            <div className=\"flex1 table-list-product-td\">{product.category}</div>\n            <div className=\"flex1 table-list-product-td\">{product.amount}</div>\n            <div className=\"flex1 table-list-product-td\">\n                <input \n                    onChange={(e) => setAmount(e.target.value)}\n                    value={amount == 0 ? '' : amount}\n                    placeholder=\"0\"\n                    type=\"number\"\n                    className=\"input-currency\"\n                />\n            </div>\n            <div className=\"flex1 table-list-product-td\">\n                <button style={{marginLeft: 0}} className={`btn-submit-update-stok`} onClick={() => handleSubmit(product)}>Submit</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Used;","import { useEffect, useState } from \"react\";\nimport {\n    useHistory,\n    useRouteMatch\n} from \"react-router-dom\";\nimport DatePicker from 'react-datepicker'\nimport moment from 'moment'\n\nfunction NavigationData({startDate, setStartDate, endDate, setEndDate, triggerGetData, setTriggerGetData}) {\n    \n    const history = useHistory()\n    let {path, url} = useRouteMatch()\n    const [pageActive, setPageActive] = useState(null)\n    const [showDatePicker, setShowDatePicker] = useState(false)\n\n    function handleClickChangePage(page) {\n        history.push(page)\n        setPageActive(page)\n        setTriggerGetData(true)\n    }\n\n    function onChangeDate( dates ){\n        const [start, end] = dates\n        setStartDate(start)\n        setEndDate(end)\n        if(start && end){\n            setTriggerGetData(true)\n            setShowDatePicker(false)\n        }\n    }\n\n    return(\n        <>\n            <div>\n                <button onClick={() => handleClickChangePage(`${path}/transactionDaily`)} className={`add-product ${pageActive === `${path}/transactionDaily` && 'button-nav-active'}`}>💰 Penjualan</button>\n                <button onClick={() => handleClickChangePage(`${path}/outCome`)} className={`add-product ${pageActive === `${path}/outCome` && 'button-nav-active'}`}>🤖 Pengeluaran</button>\n                <button onClick={() => handleClickChangePage(`${path}/used`)} className={`add-product ${pageActive === `${path}/used` && 'button-nav-active'}`}>✍️ Terpakai/Bonus</button>\n                <button onClick={() => handleClickChangePage(`${path}/asset`)} className={`add-product ${pageActive === `${path}/asset` && 'button-nav-active'}`}>💎 Asset</button>\n                <div style={{display: 'inline-block'}}>\n                    <div className=\"button--date\" onClick={() => setShowDatePicker(!showDatePicker)}>\n                        {`${moment(startDate).format('L')} - ${moment(endDate).format('L')}`}\n                    </div>\n                    {\n                        showDatePicker && (\n                            <div style={{position: 'absolute'}}>\n                                <DatePicker\n                                    onChange={onChangeDate}\n                                    selected={startDate}\n                                    startDate={startDate}\n                                    endDate={endDate}\n                                    selectsRange\n                                    inline\n                                />\n                            </div>\n                        )\n                    }\n                </div>\n            </div> \n            <br/>\n        </>\n    )\n}\n\nexport default NavigationData;","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport {toast} from 'react-toastify'\nimport moment from 'moment'\nimport convertRupiah from '../../Helpers/convertRupiah'\nimport getIndoTime from '../../Helpers/getIndoTime'\nimport Search from '../../Components/Search'\n\nfunction TransactionDaily({triggerGetData, setTriggerGetData, startDate, endDate}) {\n\n    const [transactionList, setTransactionList] = useState([])\n    const [totalBruto, setTotalBruto] = useState(0)\n    const [totalProfit, setTotalProfit] = useState(0)\n    const [totalTransactionJambu, setTotalTransactionJambu] = useState(0)\n    const [totalOutCome, setTotalOutCome] = useState(0)\n    const [date, setDate] = useState(new Date())\n\n    useEffect(() =>{\n        if(triggerGetData){\n            getTransaction()\n            getOutcome()\n        }\n    },[triggerGetData])\n    \n    function getTransaction(){\n        axios.get(`/transaction?startDate=${getIndoTime(startDate)}&endDate=${getIndoTime(endDate)}`)\n        .then(({data}) => {\n            setTransactionList(data)\n            let totalBruto = 0\n            let totalProfit = 0\n            let totalTransactionJambu = 0\n            data.map(transaction => {\n                if(transaction.productId){\n                    totalBruto += (transaction.price * transaction.amount)\n                    totalProfit += (transaction.price * transaction.amount)-(transaction.productId.modalPrice * transaction.amount)\n                }\n                if(transaction.isSoldFrom === 'grocery'){\n                    totalTransactionJambu += transaction.price * transaction.amount\n                }\n            })\n            setTotalTransactionJambu(totalTransactionJambu) \n            setTotalBruto(totalBruto)\n            setTotalProfit(totalProfit)\n            setTriggerGetData(false)\n        })\n        .catch(err => {\n            toast.error('🐔 error pak eko')\n        })\n    }\n    \n    function getOutcome() {\n        axios.get(`/outCome?startDate=${getIndoTime(startDate)}&endDate=${getIndoTime(endDate)}`)\n        .then(({data}) => {\n            let totalOutCome = 0\n            data.map(outCome => {\n                totalOutCome += outCome.amount\n            })\n            setTotalOutCome(totalOutCome)\n        })\n        .catch(err => {\n            toast.error('🐔 error pak eko')\n        })\n    }\n  \n\n    return(\n        <div>\n            <h2 className=\"color-white\">Total Penghasilan Kotor {convertRupiah(totalBruto)}</h2>\n            <h2 className=\"color-white\">Total Penghasilan Bersih {convertRupiah(totalProfit)}</h2>\n            <h2 className=\"color-white\">Total Uang Belanja Dapse {convertRupiah(totalBruto-totalProfit)}</h2>\n            <h2 className=\"color-white\">Total Pengeluaran Dapse {convertRupiah(totalOutCome)}</h2>\n            <h2 className=\"color-white\">Total Sisa Uang Belanja Dapse {convertRupiah((totalBruto-totalProfit) - totalOutCome)}</h2>\n            <h2 className=\"color-white\">Total Yang Harus Dibayar Jambu {convertRupiah(totalTransactionJambu)}</h2>\n            <br/>\n            <Search dataList={transactionList} setDataList={setTransactionList} isTransaction={true}/>\n            <br/>\n            <br/>\n            <div className=\"table-list-product\">\n                <div className=\"table-list-product-thead\">\n                    <div className=\"flex1 table-list-product-td\">Tanggal</div>\n                    <div className=\"flex1 table-list-product-td\">Nama Produk</div>\n                    <div className=\"flex1 table-list-product-td\">Sumber</div>\n                    <div className=\"flex1 table-list-product-td\">Terjual</div>\n                    <div className=\"flex1 table-list-product-td\">Harga Modal</div>\n                    <div className=\"flex1 table-list-product-td\">Harga Jual</div>\n                    <div className=\"flex1 table-list-product-td\">Total Harga</div>\n                    <div className=\"flex1 table-list-product-td\">Total Profit</div>\n                    <div className=\"flex1 table-list-product-td\">Action</div>\n                </div>\n                <div className=\"table-list-product-tbody\">\n                    {\n                        transactionList.map((transaction, indexTransaction) => {\n                            return (\n                                <React.Fragment key={transaction._id}>\n                                    {\n                                        transaction.isShow && <Product getTransaction={getTransaction} transactionList={transactionList} setTransactionList={setTransactionList} transaction={transaction} indexTransaction={indexTransaction}/>\n                                    }\n                                </React.Fragment>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </div> \n    )\n}\n\nfunction Product({transactionList, setTransactionList, transaction, indexTransaction, getTransaction}) {\n\n    function handleDeleteTransaction(){\n        axios.delete(`/transaction/${transaction._id}`)\n        .then(data => {\n            getTransaction()\n            toast.success('🦉 masok pak eko')\n        })\n        .catch(err => {\n            toast.error('🐔 error pak eko')\n        })\n    }\n\n    return(\n        <div className={`table-list-product-tr ${indexTransaction % 2 === 0 ? 'table-list-product-tr__white' : 'table-list-product-tr__black' }`}>\n            <div className=\"flex1 table-list-product-td\">{moment(transaction.created_at).format(\"ddd,MM Do YY\")}</div>\n            <div className=\"flex1 table-list-product-td\">{transaction.productId.name}</div>\n            <div className=\"flex1 table-list-product-td\">{transaction.isSoldFrom}</div>\n            <div className=\"flex1 table-list-product-td\">{transaction.amount}</div>\n            <div className=\"flex1 table-list-product-td\">{convertRupiah(transaction.modalPrice)}</div>\n            <div className=\"flex1 table-list-product-td\">{convertRupiah(transaction.price)}</div>\n            <div className=\"flex1 table-list-product-td\">{convertRupiah(transaction.price * transaction.amount)}</div>\n            <div className=\"flex1 table-list-product-td\">{convertRupiah((transaction.price * transaction.amount)-(transaction.modalPrice * transaction.amount))}</div>\n            <div className=\"flex1 table-list-product-td\">\n                <button className=\"btn-delete-product\" onClick={handleDeleteTransaction}>Delete</button>\n            </div>\n        </div>\n    )\n}\n\nexport default TransactionDaily;","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport {toast} from 'react-toastify'\nimport moment from 'moment'\nimport convertRupiah from '../../Helpers/convertRupiah'\nimport getIndoTime from '../../Helpers/getIndoTime'\nimport Search from '../../Components/Search'\n\nfunction OutCome({triggerGetData, setTriggerGetData, startDate, endDate}) {\n\n    const [transactionList, setTransactionList] = useState([])\n    const [outCome, setTotalOutCome] = useState(0)\n    const [totalUsedCount, setTotalUsedCount] = useState(0)\n    const [date, setDate] = useState(new Date())\n\n    useEffect(() =>{\n        if(triggerGetData){\n            getTransaction()\n        }\n    },[triggerGetData])\n    \n    function getTransaction() {\n        axios.get(`/outCome?startDate=${getIndoTime(startDate)}&endDate=${getIndoTime(endDate)}`)\n        .then(({data}) => {\n            setTransactionList(data)\n            let outCome = 0\n            data.map(transaction => {\n                outCome += transaction.amount\n            })\n            setTotalOutCome(outCome)\n            setTriggerGetData(false)\n        })\n        .catch(err => {\n            toast.error('🐔 error pak eko')\n        })\n\n    }\n\n    return(\n        <div>\n            <h2 className=\"color-white\">Total Pengeluaran {convertRupiah(outCome)}</h2>\n            <br/>\n            <Search dataList={transactionList} setDataList={setTransactionList} isOutCome={true}/>\n            <br/>\n            <br/>\n            <div className=\"table-list-product\">\n                <div className=\"table-list-product-thead\">\n                    <div className=\"flex1 table-list-product-td\">Tanggal</div>\n                    <div className=\"flex1 table-list-product-td\">Sumber</div>\n                    <div className=\"flex1 table-list-product-td\">Total</div>\n                    <div className=\"flex1 table-list-product-td\">Keterangan</div>\n                    <div className=\"flex1 table-list-product-td\">Action</div>\n                </div>\n                <div className=\"table-list-product-tbody\">\n                    {\n                        transactionList.map((transaction, indexTransaction) => {\n                            return (\n                                <React.Fragment key={transaction._id}>\n                                    {\n                                        transaction.isShow && <Product getTransaction={getTransaction} transactionList={transactionList} setTransactionList={setTransactionList} transaction={transaction} indexTransaction={indexTransaction}/>\n                                    }\n                                </React.Fragment>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </div> \n    )\n}\n\nfunction Product({transactionList, setTransactionList, transaction, indexTransaction, getTransaction}) {\n\n    function handleDeleteTransaction(){\n        axios.delete(`/outCome/${transaction._id}`)\n        .then(data => {\n            getTransaction()\n            toast.success('🦉 masok pak eko')\n        })\n        .catch(err => {\n            toast.error('🐔 error pak eko')\n        })\n    } \n    return(\n        <div className={`table-list-product-tr ${indexTransaction % 2 === 0 ? 'table-list-product-tr__white' : 'table-list-product-tr__black' }`}>\n            <div className=\"flex1 table-list-product-td\">{moment(transaction.created_at).format(\"ddd,MM Do YY\")}</div>\n            <div className=\"flex1 table-list-product-td\">{transaction.source}</div>\n            <div className=\"flex1 table-list-product-td\">{convertRupiah(transaction.amount)}</div>\n            <div className=\"flex1 table-list-product-td\">{transaction.description}</div>\n            <div className=\"flex1 table-list-product-td\">\n                <button className=\"btn-delete-product\" onClick={handleDeleteTransaction}>Delete</button>\n            </div>\n        </div>\n    )\n}\n\nexport default OutCome;","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport {toast} from 'react-toastify'\nimport moment from 'moment'\nimport convertRupiah from '../../Helpers/convertRupiah'\nimport getIndoTime from '../../Helpers/getIndoTime'\nimport Search from '../../Components/Search'\n\nfunction Used({triggerGetData, setTriggerGetData, startDate, endDate}) {\n\n    const [transactionList, setTransactionList] = useState([])\n    const [totalUsedIDR, setTotalUsedIDR] = useState(0)\n    const [totalUsedCount, setTotalUsedCount] = useState(0)\n    const [date, setDate] = useState(new Date())\n    \n    useEffect(() =>{\n        if(triggerGetData){\n            getTransaction()\n        }\n    },[triggerGetData])\n    \n    function getTransaction(){\n        axios.get(`/used?startDate=${getIndoTime(startDate)}&endDate=${getIndoTime(endDate)}`)\n        .then(({data}) => {\n            setTransactionList(data)\n            let totalUsedIDR = 0\n            let totalUsedCount = 0\n            data.map(transaction => {\n                totalUsedIDR += (transaction.modalPrice * transaction.amount)\n                totalUsedCount += transaction.amount\n            })\n            setTotalUsedIDR(totalUsedIDR)\n            setTotalUsedCount(totalUsedCount)\n            setTriggerGetData(false)\n        })\n        .catch(err => {\n            toast.error('🐔 error pak eko')\n        })\n    }\n\n    return(\n        <div>\n            <h2 className=\"color-white\">Total Terpakai/Bonus {convertRupiah(totalUsedIDR)}</h2>\n            <h2 className=\"color-white\">Jumlah Terpakai/Bonus Sebanyak {totalUsedCount}</h2>\n            <br/>\n            <Search dataList={transactionList} setDataList={setTransactionList} isTransaction={true}/>\n            <br/>\n            <br/>\n            <div className=\"table-list-product\">\n                <div className=\"table-list-product-thead\">\n                    <div className=\"flex1 table-list-product-td\">Tanggal</div>\n                    <div className=\"flex1 table-list-product-td\">Nama Produk</div>\n                    <div className=\"flex1 table-list-product-td\">Terpakai</div>\n                    <div className=\"flex1 table-list-product-td\">Harga Modal</div>\n                    <div className=\"flex1 table-list-product-td\">Harga Jual</div>\n                    <div className=\"flex1 table-list-product-td\">Total Harga</div>\n                    <div className=\"flex1 table-list-product-td\">Action</div>\n                </div>\n                <div className=\"table-list-product-tbody\">\n                    {\n                        transactionList.map((transaction, indexTransaction) => {\n                            return (\n                                <React.Fragment key={transaction._id}>\n                                    {\n                                        transaction.isShow && <Product getTransaction={getTransaction} transactionList={transactionList} setTransactionList={setTransactionList} transaction={transaction} indexTransaction={indexTransaction}/>\n                                    }\n                                </React.Fragment>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </div> \n    )\n}\n\nfunction Product({transactionList, setTransactionList, transaction, indexTransaction, getTransaction}) {\n\n    function handleDeleteTransaction(){\n        axios.delete(`/used/${transaction._id}`)\n        .then(data => {\n            getTransaction()\n            toast.success('🦉 masok pak eko')\n        })\n        .catch(err => {\n            toast.error('🐔 error pak eko')\n        })\n    } \n    return(\n        <div className={`table-list-product-tr ${indexTransaction % 2 === 0 ? 'table-list-product-tr__white' : 'table-list-product-tr__black' }`}>\n            <div className=\"flex1 table-list-product-td\">{moment(transaction.created_at).format(\"ddd,MM Do YY\")}</div>\n            <div className=\"flex1 table-list-product-td\">{transaction.productName}</div>\n            <div className=\"flex1 table-list-product-td\">{transaction.amount}</div>\n            <div className=\"flex1 table-list-product-td\">{convertRupiah(transaction.modalPrice)}</div>\n            <div className=\"flex1 table-list-product-td\">{convertRupiah(transaction.sellPriceRetail)}</div>\n            <div className=\"flex1 table-list-product-td\">{convertRupiah(transaction.modalPrice * transaction.amount)}</div>\n            <div className=\"flex1 table-list-product-td\">\n                <button className=\"btn-delete-product\" onClick={handleDeleteTransaction}>Delete</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Used;","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport {toast} from 'react-toastify'\nimport moment from 'moment'\nimport convertRupiah from '../../Helpers/convertRupiah'\nimport Search from '../../Components/Search'\n\nfunction Asset() {\n\n    const [productList, setProductList] = useState([])\n    const [totalAssetProductToIDR, setTotalAssetProductToIDR] = useState(0)\n    const [cashAsset, setCashAsset] = useState(0)\n    const [cashAssetUsed, setCashAssetUsed] = useState(0)\n    const [cashAssetData, setCashAssetData] = useState(null)\n    const [inputEditAsset, setInputEditAsset] = useState(0)\n\n    useEffect(() =>{\n        getCashAsset()\n        axios.get('/product')\n        .then(({data}) => {\n            setProductList(data)\n            let totalAssetProductToIDR = 0\n            let totalAssetProductUsedToIDR = 0\n            data.map(product => {\n                totalAssetProductToIDR += (product.amount * product.modalPrice)\n                totalAssetProductUsedToIDR += (product.totalUsed * product.modalPrice)\n            })\n            setTotalAssetProductToIDR(totalAssetProductToIDR)\n            setCashAssetUsed(totalAssetProductUsedToIDR)\n        })\n        .catch(err => {\n            toast.error('🐔 error pak eko')\n        })\n    },[])\n    \n    function getCashAsset() {\n        axios.get('/asset')\n        .then(({data}) => {\n            if(data[0]){\n                setCashAsset(data[0].cashAsset)\n                setCashAssetData(data[0])\n            }\n        })\n        .catch(err => {\n            toast.error('🐔 error pak eko')\n        })\n    }\n\n    function handleEditAsset(){\n        if(cashAssetData){\n            axios.put(`/asset/${cashAssetData._id}`, {\n                cashAsset: inputEditAsset\n            })\n            .then(({data}) => {\n              toast.success('mantap gan')\n              setInputEditAsset(0)\n              getCashAsset()\n            })\n            .catch(err => {\n                toast.error('🐔 error pak eko')\n            })\n        }else {\n            axios.post(`/asset`, {\n                cashAsset: inputEditAsset\n            })\n            .then(({data}) => {\n                setInputEditAsset(0)\n                getCashAsset()\n                toast.success('mantap gan')\n            })\n            .catch(err => {\n                toast.error('🐔 error pak eko')\n            })\n\n        }\n\n    }\n\n    function handleAddAsset() {\n        if(cashAssetData){\n            axios.put(`/asset/${cashAssetData._id}`, {\n                cashAsset: inputEditAsset + cashAssetData.cashAsset\n            })\n            .then(({data}) => {\n              toast.success('mantap gan')\n              setInputEditAsset(0)\n              getCashAsset()\n            })\n            .catch(err => {\n                toast.error('🐔 error pak eko')\n            })\n        }else {\n            axios.post(`/asset`, {\n                cashAsset: inputEditAsset\n            })\n            .then(({data}) => {\n                setInputEditAsset(0)\n                getCashAsset()\n                toast.success('mantap gan')\n            })\n            .catch(err => {\n                toast.error('🐔 error pak eko')\n            })\n\n        }\n    }\n\n    return(\n        <div>\n            <div>\n                <input \n                    placeholder=\"input asset cash\" \n                    type=\"number\" \n                    min={0}\n                    value={inputEditAsset == 0 ? '' : inputEditAsset}\n                    onChange={(e) => setInputEditAsset(Number(e.target.value))}\n                />\n                {\n                    cashAssetData ? \n                        <>\n                            <button style={{marginLeft: '10px'}} className='btn-add-asset' onClick={handleAddAsset}>ADD</button>\n                            <button style={{marginLeft: '10px'}} className='btn-edit-product' onClick={handleEditAsset}>EDIT</button>\n                        </>\n                    :\n                        <button style={{marginLeft: '10px'}} className='btn-edit-product' onClick={handleEditAsset}>SUBMIT</button>\n\n                }\n            </div>\n            <h2 className=\"color-white\">Asset (Cash/Saldo) {convertRupiah(cashAsset)}</h2>\n            <h2 className=\"color-white\">Asset (Barang) {convertRupiah(totalAssetProductToIDR)}</h2>\n            <h2 className=\"color-white\" style={{backgroundColor: '#3300ff'}}>Total Asset {convertRupiah(totalAssetProductToIDR + cashAsset)}</h2>\n            <h2 className=\"color-white\" style={{backgroundColor: '#ff00b1'}}>Total Asset Terpakai {convertRupiah(cashAssetUsed)}</h2>\n            <h2 className=\"color-white\" style={{backgroundColor: 'rgb(121 121 121)'}}>Total Asset Seharusnya {convertRupiah(cashAssetUsed + (totalAssetProductToIDR + cashAsset))}</h2>\n            <br/>\n            <Search dataList={productList} setDataList={setProductList}/>\n            <br/>\n            <br/>\n            <div className=\"table-list-product\">\n                <div className=\"table-list-product-thead\">\n                    <div className=\"flex1 table-list-product-td\">Nama Produk</div>\n                    <div className=\"flex1 table-list-product-td\">Sisa Stok</div>\n                    <div className=\"flex1 table-list-product-td\">Harga Modal</div>\n                    <div className=\"flex1 table-list-product-td\">Terjual</div>\n                    <div className=\"flex1 table-list-product-td\">Terpakai/Bonus</div>\n                    <div className=\"flex1 table-list-product-td\">Total Modal (Rupiah)</div>\n                </div>\n                <div className=\"table-list-product-tbody\">\n                    {\n                        productList.map((product, indexProduct) => {\n                            return (\n                                <React.Fragment key={product._id}>\n                                    {\n                                        product.isShow && <Product product={product} indexProduct={indexProduct}/>\n                                    }\n                                </React.Fragment>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </div> \n    )\n}\n\nfunction Product({product, indexProduct}) {\n\n    return(\n        <div className={`table-list-product-tr ${indexProduct % 2 === 0 ? 'table-list-product-tr__white' : 'table-list-product-tr__black' }`}>\n            <div className=\"flex1 table-list-product-td\">{product.name}</div>\n            <div className=\"flex1 table-list-product-td\">{product.amount}</div>\n            <div className=\"flex1 table-list-product-td\">{convertRupiah(product.modalPrice)}</div>\n            <div className=\"flex1 table-list-product-td\">{product.totalSold}</div>\n            <div className=\"flex1 table-list-product-td\">{product.totalUsed}</div>\n            <div className=\"flex1 table-list-product-td\">{convertRupiah(product.modalPrice * product.amount)}</div>\n        </div>\n    )\n}\n\nexport default Asset;","import {useEffect, useLayoutEffect} from 'react'\nimport axios from 'axios'\nimport NavigationData from '../../Components/navigationData'\nimport {\n    Switch,\n    Route,\n    useRouteMatch\n} from \"react-router-dom\";\nimport TransactionDaily from './transactionDaily'\nimport OutCome from './outCome'\nimport Used from './used'\nimport Asset from './asset'\n\nfunction Data({isPageActive, setIsPageActive, startDate, setStartDate, endDate, setEndDate, triggerGetData, setTriggerGetData}){ \n\n    let {path, url} = useRouteMatch()\n    useEffect(() =>{\n        setIsPageActive(false)\n    },[])\n    \n    useLayoutEffect(() => {\n        return () => {\n            setIsPageActive(true)\n        } \n    },[])\n\n    return(\n        <div className=\"section-data\">\n            <NavigationData triggerGetData={triggerGetData} setTriggerGetData={setTriggerGetData} startDate={startDate} setStartDate={setStartDate} endDate={endDate} setEndDate={setEndDate}/>\n            <Switch>\n                <Route exact path={`${path}/transactionDaily`}>\n                    <TransactionDaily startDate={startDate} endDate={endDate} triggerGetData={triggerGetData} setTriggerGetData={setTriggerGetData} />\n                </Route>\n                <Route path={`${path}/outCome`}>\n                    <OutCome startDate={startDate} endDate={endDate} triggerGetData={triggerGetData} setTriggerGetData={setTriggerGetData}/>\n                </Route>\n                <Route path={`${path}/used`}>\n                    <Used startDate={startDate} endDate={endDate} triggerGetData={triggerGetData} setTriggerGetData={setTriggerGetData}/>\n                </Route>\n                <Route path={`${path}/asset`}>\n                    <Asset />\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n\nexport default Data","import {\n    useHistory\n} from \"react-router-dom\";\n\nfunction Header(){\n\n    const history = useHistory()\n\n    function handleClickChangePage(page) {\n        history.push(page)\n    }\n\n    return(\n        <div className=\"header\">\n          <button onClick={() => handleClickChangePage(\"/\")}>Kelola Produk Tingwe</button>\n          <button onClick={() => handleClickChangePage(\"/addOutCome\")}>Pengeluaran Tingwe (harian)</button>\n          <button onClick={() => handleClickChangePage(\"/data\")}>Data 👀</button>\n        </div>\n    )\n}\n\nexport default Header","import './style.css';\nimport './custom.css';\nimport {useState, useEffect} from 'react'\nimport AddProduct from './Views/AddProduct';\nimport ProductManagement from './Views/ProductManagement';\nimport UpdateStock from './Views/UpdateStock';\nimport SellManagement from './Views/SellManagement';\nimport OutCome from './Views/OutCome';\nimport Used from './Views/Used';\nimport Data from './Views/Data';\nimport Header from './Components/Header';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useHistory\n  } from \"react-router-dom\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport NavigationProductManagement from './Components/navigationProductManagement'\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction App() {\n\n  const [isPageActive, setIsPageActive] = useState('/')\n  const [startDate, setStartDate] = useState(new Date())\n  const [endDate, setEndDate] = useState(new Date())\n  const [triggerGetData, setTriggerGetData] = useState(true)\n\n  return (\n    <div>\n      <Router>\n        <Header/>\n        <div className=\"container\">\n          {isPageActive && <NavigationProductManagement isPageActive={isPageActive} setIsPageActive={setIsPageActive}/>}\n          <Switch>\n            <Route path=\"/addOutCome\">\n              <OutCome setIsPageActive={setIsPageActive}/>\n            </Route>\n            <Route path=\"/data\">\n              <Data triggerGetData={triggerGetData} setTriggerGetData={setTriggerGetData} startDate={startDate} setStartDate={setStartDate} endDate={endDate} setEndDate={setEndDate} isPageActive={isPageActive} setIsPageActive={setIsPageActive} />\n            </Route>\n            <Route path=\"/penjualan\">\n              <SellManagement setIsPageActive={setIsPageActive}/>\n            </Route>\n            <Route path=\"/updateStock\">\n              <UpdateStock setIsPageActive={setIsPageActive}/>\n            </Route>\n            <Route path=\"/addProduct\">\n              <AddProduct setIsPageActive={setIsPageActive}/>\n            </Route>\n            <Route path=\"/used\">\n              <Used setIsPageActive={setIsPageActive}/>\n            </Route>\n            <Route path=\"/\">\n              <ProductManagement setIsPageActive={setIsPageActive}/>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n      <ToastContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport axios from 'axios'\n\n//axios.defaults.baseURL = 'https://tingwedapsedashboard.herokuapp.com/'\naxios.defaults.baseURL = 'http://localhost:3000'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}